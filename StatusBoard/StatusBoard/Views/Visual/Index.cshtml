@using StatusBoard.Controllers
@using StatusBoard.Models.OnTimeApiModels
@model StatusBoard.Models.Visual.IndexViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="en">
<head>
    <title>OnTime Condition Board Visualization</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    @Styles.Render("~/Content/TwitterBootstrap")
    <link href="~/Content/VisualizationThemes/Black/style.css" rel="stylesheet" />
    <meta http-equiv="refresh" content="@Model.RefreshRate" >
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="navbar-inner">
            <div class="container">
                <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="brand" href="#">Status Board</a>
                <div class="nav-collapse collapse" style="height: 0px;">
                    <ul class="nav">
                        <li @(Model.ItemType == VisualController.ItemType.defects ? "class=active" : "")  ><a href="@Url.Action("Index", new { type = "defects" })">Defects</a></li>
                        <li @(Model.ItemType == VisualController.ItemType.features ? "class=active" : "")><a href="@Url.Action("Index", new { type = "features" })">Features</a></li>
                        <li><a href="@Url.Action("Manage", "Account")">Settings</a></li>
                        <li><a href="@this.Request.RawUrl">Refresh Page</a></li>
                    </ul>
                </div>
                <!--/.nav-collapse -->
            </div>
        </div>
    </div>
    <div class="container">
        <h1>@Model.PluralItemsName</h1>
        <div class="row-fluid" id="stackedZones">
            <div class="span12 img-rounded" id="defectTypes">
                
            </div>
        </div>
        <div class="row-fluid">
            <div class="span7 blockedRegion" id="defectsWorkflowSteps">
                <h2>Most Recent @Model.PluralItemsName</h2>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Priority</th>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Created Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var recentDefect in Model.RecentDefects.OrderByDescending(d => d.created_date_time).Take(16))
                        {
                            <tr>
                                <td>@recentDefect.priority.name </td>
                                <td>@recentDefect.id</td>
                                <td><span class="priorityColorBox" style="background-color: #@recentDefect.priority.color"></span> @recentDefect.name</td>
                                <td>@recentDefect.created_date_time.Value.ToShortDateString()</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="span5">
                <div class="row-fluid">
                    <div class="span12 blockedRegion">
                        <h2>Recently Modified</h2>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>OnTime User</th>
                                    <th>ID</th>
                                    <th>Bug Name</th>

                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var d in Model.RecentDefects.OrderByDescending(d => d.last_updated_date_time).Take(5))
                                {
                                    <tr>
                                        <td>@d.last_updated_by.name</td>
                                        <td>@d.id</td>
                                        <td><span class="priorityColorBox" style="background-color: #@d.priority.color"></span> @d.name</td>
                                        <td>@d.last_updated_date_time.Value.ToShortDateString()</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="span12 blockedRegion">
                        <h2>Workflow Steps</h2>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Workflow Step</th>
                                    <th>Count</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var workflowStep in Model.RecentDefects.GroupBy(d => d.workflow_step.id).OrderBy(g => g.First().workflow_step.order))
                                {
                                    <tr>
                                        <td>@workflowStep.First().workflow_step.name</td>
                                        <td>@workflowStep.Count()</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="footer">
            Last updated at @DateTime.UtcNow.ToShortTimeString() UTC. Updates every @(Model.RefreshRate / 60) minutes.
        </div>
        
    </div>
</body>

@Scripts.Render("~/bundles/jquery", "~/bundles/TwitterBootstrap", "~/bundles/Visual")

</html>
